---
- name: "Check if {{ nf_core_env_name }} virtual env exists"
  shell: "conda env list"
  register: "conda_envs"

- name: >
    Setup {{ nf_core_env_name }} virtual env
    with python {{ python3_version }} and nf-core v{{ nf_core_version }}
  command: >
    conda create -n {{ nf_core_env_name }}
    -c conda-forge
    -c bioconda
    python={{ python3_version }}
    nf-core={{ nf_core_version }}
    nextflow={{ nextflow_version_tag }}
  when: not nf_core_env_name in conda_envs.stdout|split

# Setup pipelines
- name: setup nf-core pipelines
  include_tasks: pipeline.yml
  vars:
    pipeline: "{{ item.name }}"
    release: "{{ item.release }}"
    pipeline_specific_containers: "{{ item.pipeline_specific_containers | default([]) }}"
    pipeline_genomes: "{{ item.pipeline_genomes | default([]) }}"
    extra_parameters: "{{ item.extra_parameters | default({}) }}"
    container_dir: "{{ ngi_containers }}/{{ item.container_dir | default(item.name) }}"
    repository: "{{ item.repository | default(item.name) }}"
    # `nf-core pipelines download` does this replacement to make the folder names
    # 'filesystem-safe', so we need to do it too.
    release_path: "{{ sw_path }}/{{ pipeline }}/{{ item.release | regex_replace('[^0-9a-zA-Z_]+', '_') }}"
  with_items: "{{ pipelines }}"
  tags: pipelines

# Setup iGenomes
- name: setup iGenomes
  include_tasks: igenomes.yml
  tags: igenomes

- name: Deploy script for softlinking delivery Readmes
  template:
    src: create_delivery_readme_softlinks.sh.j2
    dest: "{{ ngi_resources }}/create_nfcore_delivery_readme_softlinks_{{ site }}.sh"

- name: add static folders to be created
  set_fact:
    static_folders: "{{ static_folders + [ngi_softlinks] }}"

- name: add static commands to be run
  set_fact:
    static_commands: "{{ static_commands + ['. ' ~ ngi_resources ~ '/create_nfcore_delivery_readme_softlinks_' ~ site ~ '.sh'] }}"

- name: Store nf-core version in deployment
  lineinfile:
    dest: "{{ deployed_tool_versions }}"
    line: "nf-core: {{ nf_core_version }}"
